<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vanrui.app.user.dao.UserDao">
 
  <resultMap  id="BaseResultMap" type="com.vanrui.app.user.model.UserEntity" >
  		<id column="U_ID" jdbcType="BIGINT" property="uId" />
	    <result column="USERNAME" jdbcType="VARCHAR" property="userName" /> 
	    <result column="ACCOUNT" jdbcType="VARCHAR" property="account" /> 
	    <result column="EMPLOYEE_CODE" jdbcType="VARCHAR" property="employeeCode" /> 
	    <result column="PASSWORD" jdbcType="VARCHAR" property="password" /> 
	    <result column="MOBILEPHONE" jdbcType="VARCHAR" property="mobilePhone" /> 
	    <result column="EMAIL" jdbcType="VARCHAR" property="email" /> 
	    <result column="ADDRESS" jdbcType="VARCHAR" property="address" /> 
	    <result column="ID_CARD" jdbcType="VARCHAR" property="idCard" /> 
	    <result column="STATUS" jdbcType="INTEGER" property="status" /> 
	    <result column="F_SOLUTION" jdbcType="VARCHAR" property="fSolution" /> 
	    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" /> 
	    <result column="CREATOR" jdbcType="BIGINT" property="creator" />  
  </resultMap>
  
  <resultMap id="BaseResultMap02" type="com.vanrui.app.user.dto.UserInfoDto"> 
  		<id column="U_ID" jdbcType="BIGINT" property="uId" />
	    <result column="USERNAME" jdbcType="VARCHAR" property="userName" /> 
	    <result column="ACCOUNT" jdbcType="VARCHAR" property="account" />   
	    <result column="MOBILEPHONE" jdbcType="VARCHAR" property="mobilePhone" />  
	    <result column="EMPLOYEE_CODE" jdbcType="VARCHAR" property="employeeCode" /> 
	    <result column="STATUS" jdbcType="INTEGER" property="status" /> 
	    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />  
	    <result column="R_NAME" jdbcType="VARCHAR" property="roleName" />  
	    <result column="R_ID" jdbcType="BIGINT" property="roleId" />  
	    <result column="skills" jdbcType="VARCHAR" property="skills" />  
	    <result column="jgs" jdbcType="VARCHAR" property="jgs" />  
  </resultMap>
   
  <sql id="Base_Column_List">
  		U_ID,USERNAME,ACCOUNT,STATUS,CREATE_TIME,CREATOR,F_SOLUTION,
  		EMPLOYEE_CODE,MOBILEPHONE,EMAIL,ADDRESS,ID_CARD,PASSWORD,ACCOUNT	
  </sql>
  <insert id="insert"  parameterType="com.vanrui.app.user.model.UserEntity"  useGeneratedKeys="true" keyProperty="uId">
	    insert   into  t_user ( USERNAME,ACCOUNT,STATUS,CREATE_TIME,CREATOR,PASSWORD
	    	<if test=" employeeCode != null ">
		  		,EMPLOYEE_CODE
	        </if>
	        <if test=" mobilePhone != null ">
		  		,MOBILEPHONE
	        </if>
	         <if test=" email != null ">
		  		,EMAIL
	        </if>
	        <if test="address != null ">
		  		,ADDRESS 
	        </if>
	        <if test=" idCard != null ">
		  		,ID_CARD 
	        </if>
	        <if test="registId != null ">
		  		,REGIST_ID 
	        </if>
  		) values (
	        #{userName},
	        #{account},
	        #{status},
	        #{createTime},
	        #{creator},
	        #{password}
	        <if test=" employeeCode != null ">
		        ,#{employeeCode} 
	        </if>
	        <if test=" mobilePhone != null ">
		        ,#{mobilePhone} 
	        </if>
	        <if test=" email != null ">
	       		, #{email} 
	        </if>
	        <if test="address != null ">
	        	,#{address} 	
	        </if>
	        <if test=" idCard != null ">
		        ,#{idCard} 
	        </if>
	        <if test="registId != null ">
		        ,#{registId} 
	        </if>
	    ) 
  </insert>
  
  <update id="update" parameterType="com.vanrui.app.user.model.UserEntity" >
  		update   t_user  SET  
	  		<if test=" userName != null ">
		  		USERNAME = #{userName},
	        </if>
	        <if test=" status != null ">
		  		STATUS = #{status},
	        </if>
	        <if test=" fSolution != null ">
		  		F_SOLUTION = #{fSolution},
	        </if>
	    	<if test=" employeeCode != null ">
		  		EMPLOYEE_CODE = #{employeeCode},
	        </if>
	        <if test=" mobilePhone != null ">
		  		MOBILEPHONE = #{mobilePhone},
	        </if>
	         <if test=" email != null ">
		  		EMAIL = #{email},
	        </if>
	        <if test="address != null ">
		  		ADDRESS = #{address},
	        </if>
	        <if test=" idCard != null ">
		  		ID_CARD = #{idCard},
	        </if>
	        <if test="registId != null ">
		  		REGIST_ID = #{registId},
	        </if> 
	        <if test="password != null ">
		  		PASSWORD = #{password},
	        </if>
	        <if test=" updator != null ">
		  		UPDATE_TIME = #{updateTime},
		  		UPDATOR = #{updator}
	        </if> 
	    where  U_ID = #{uId}
  </update>
  
  <select id="queryInfoByUId" parameterType="java.lang.Long"  resultMap="BaseResultMap">
  		select  <include refid="Base_Column_List"></include>
  		  from  t_user 
  		 where  U_ID = #{uId}
  </select>
  
  
  <select id="queryInfoByAccountorMobilePhone" parameterType="java.lang.String"  resultMap="BaseResultMap">
  		select  U_ID,USERNAME,ACCOUNT,EMPLOYEE_CODE,MOBILEPHONE,PASSWORD,STATUS
  		  from  t_user
  		 where   ACCOUNT = #{account}  or ( MOBILEPHONE IS NOT NULL and MOBILEPHONE = #{account}  ) 
  </select>
   

	<select id="queryUidsByCondition" parameterType="com.vanrui.app.user.dto.UserListCondition"  resultType="java.lang.Long" >
		SELECT DISTINCT u.U_ID
		FROM T_USER u
			<if test=" condition.roleId != null ">
	  			INNER JOIN t_ref_role_user rru ON u.U_ID = rru.U_ID AND rru.R_ID = #{condition.roleId}
		  	</if>
		  	<if test=" skills != null ">
		  		INNER JOIN t_ref_user_skill rus ON u.U_ID = rus.U_ID AND rus.SKILL_ID IN (
				<foreach collection="skills" item="item" index="index" separator=",">
					${item} 
				</foreach>
				)
		  	</if>
		  	<if test=" condition.combineCode != null ">
		  		INNER JOIN t_ref_user_organization ruo ON u.U_ID = ruo.U_ID AND ruo.COMBINATION_CODE LIKE CONCAT(#{condition.combineCode},'%')
		  	</if>
		  	
		WHERE 1 = 1
		<if test=" condition.userName != null ">
			AND u.USERNAME LIKE CONCAT('%',#{condition.userName},'%')
		</if> 
		<if test=" condition.status != null ">
			AND u.STATUS = #{condition.status} 
		</if>  
		<if test=" condition.sort == 1 ">
			ORDER BY u.CREATE_TIME DESC 
		</if>
		<if test=" condition.sort == 2 ">
			ORDER BY u.CREATE_TIME ASC 
		</if>
		<if test=" condition.sort == 3 ">
			ORDER BY u.USERNAME ASC 
		</if>
		<if test=" condition.sort == 4 ">
			ORDER BY u.USERNAME DESC 
		</if>
  </select>
 
   <select id="selectUsersByUids"  parameterType="java.util.List"  resultMap="BaseResultMap02" >
   		SELECT
				u.U_ID,u.USERNAME,u.ACCOUNT,u.CREATE_TIME,u.STATUS,u.MOBILEPHONE,EMPLOYEE_CODE, 
				role.R_NAME ,role.R_ID,
				( SELECT  GROUP_CONCAT(CONCAT(kiRef.SKILL_ID,':',kil.SKILL_NAME)) SKILL_NAME 
				    FROM  t_ref_user_skill kiRef, t_skill_dictionary kil  
				   WHERE  kiRef.SKILL_ID = kil.SKILL_ID AND  kiRef.U_ID = u.U_ID
				) skills,
				( SELECT  GROUP_CONCAT( org.OR_ID ) orName
				    FROM  t_ref_user_organization  org
				   WHERE  org.U_ID=u.U_ID 
				) jgs 
		 FROM   T_USER   u left join (
		 		SELECT r.R_ID,r.R_NAME,ruRef.U_ID
			      FROM   t_ref_role_user ruRef, t_role  r
			     WHERE  ruRef.R_ID = r.R_ID  
		 )  role  on   role.U_ID =u.U_ID
		 WHERE    u.U_ID  IN  (
		 	<foreach collection="uIds" item="item" index="index" separator=",">
		 		#{item}
		 	</foreach>
		 ) 
		 <if test=" sort == 1 ">
		 ORDER  BY  u.CREATE_TIME  DESC 
		 </if>
		 <if test=" sort == 2 ">
		 ORDER  BY  u.CREATE_TIME  ASC 
		 </if>
		 <if test=" sort == 3 ">
		 ORDER  BY  u.USERNAME  ASC 
		 </if>
		 <if test=" sort == 4 ">
		 ORDER  BY  u.USERNAME  DESC 
		 </if>
   </select>
   
   <select id="selectPassword" resultType="java.lang.String">
   		 SELECT PASSWORD  FROM   t_user  WHERE  u_ID = #{uId} 
   </select>
   
   <select id="selectUserBaseInfoList" resultMap="BaseResultMap02" resultType="java.lang.Long">
   		 SELECT
				u.U_ID,u.USERNAME,u.ACCOUNT,u.CREATE_TIME,u.STATUS,u.MOBILEPHONE,EMPLOYEE_CODE
				,role.R_ID,role.R_NAME
		 FROM   T_USER   u left join (
		 		SELECT r.R_ID,r.R_NAME,ruRef.U_ID
			      FROM   t_ref_role_user ruRef, t_role  r
			     WHERE  ruRef.R_ID = r.R_ID  
		 )  role  on  role.U_ID =u.U_ID  
		 WHERE    u.U_ID  IN  (
		 	<foreach collection="uIds" item="item" index="index" separator=",">
		 		#{item}
		 	</foreach>
		 ) 
   </select>
   
      <select id="isExistsForPhoneNum" resultType="java.lang.String" >
   		SELECT '1'  FROM   t_user  
   		WHERE  MOBILEPHONE = #{phoneNum}
   		<if test="userId != null ">
   		  AND  U_ID != #{userId} 
   		</if>
   		limit 1
   </select>
    
   <select id="isExistsForEmployeeCode" resultType="java.lang.String" >
   		SELECT '1'  FROM   t_user  
   		WHERE  EMPLOYEE_CODE = #{employeeCode}
   		<if test="userId != null ">
   		  AND  U_ID != #{userId} 
   		</if>
   		limit 1
   </select> 
   
   <select id="isExistsForAccount" resultType="java.lang.String" >
   		SELECT '1'  FROM   t_user  
   		WHERE  ACCOUNT = #{account} 
   		limit 1
   </select>
   
   <select id="selectAssignOrderUsers" resultMap="BaseResultMap" >
     SELECT t1.`U_ID`, t1.`USERNAME` 
     FROM t_user AS t1 
     WHERE t1.STATUS = 1 
	     and t1.`U_ID` IN 
		     (SELECT U_ID FROM t_ref_role_user WHERE R_ID IN (
		        <foreach collection="roleIds" item="item" index="index" separator=",">
		                ${item}
		        </foreach>
		     )) 
		     <if test=" skillIds != null ">
		     AND t1.`U_ID` IN (SELECT U_ID FROM t_ref_user_skill WHERE skill_id IN (
	        <foreach collection="skillIds" item="item" index="index" separator=",">
	                ${item}
	         </foreach>
	      ))
	     </if>
	     AND t1.`U_ID` IN (SELECT U_ID FROM t_ref_user_organization WHERE OR_ID = #{orgId})
	     
	     <if test="userName != null and userName != '' ">
			   AND  t1.`USERNAME`  LIKE   CONCAT('%',#{userName},'%')
		 </if>
   </select>
   
   <select id="selectAllUserIdList" resultType="java.lang.Long">
   		SELECT U_ID
   		FROM t_user
   		WHERE status = 1
   </select>
   
   <select id="validateIsManagers"    resultType="java.lang.Integer" parameterType="java.lang.Long" >

  		SELECT  EXISTS(
			SELECT  1 FROM  `t_ref_appsource_role` app ,(SELECT  r_id  FROM  `t_ref_role_user`  WHERE  u_ID =#{userId} ) r 
			WHERE  app.r_id = r.r_id AND  S_ID IN (4 , 5)
		 UNION
			SELECT  1 FROM  `t_ref_websource_role` web ,(SELECT  r_id  FROM  `t_ref_role_user`  WHERE  u_ID =#{userId} ) r 
			WHERE  web.r_id = r.r_id AND S_ID IN (210, 220, 230) 
		  )
		
  </select>
  
   <select id="hasWorkOrderRepairPermission"    resultType="java.lang.Integer" parameterType="java.lang.Long" >

  		SELECT  EXISTS(
			SELECT  1 FROM  `t_ref_appsource_role` app ,(SELECT  r_id  FROM  `t_ref_role_user`  WHERE  u_ID =#{userId} ) r 
			WHERE  app.r_id = r.r_id AND  S_ID in (2, 3)
		  )
		
  </select>
  
  
  <select id="selectAllRIdList" resultType="java.lang.Long" parameterType="java.lang.Long" >

  		
			SELECT DISTINCT S_Id FROM  `t_ref_websource_role` web ,(SELECT  r_id  FROM  `t_ref_role_user`  WHERE  u_ID =#{userId} ) r 
			WHERE  web.r_id = r.r_id  
  </select>
  
  <select id="queryUIdByPhoneNum" resultType="java.lang.Long" parameterType="java.lang.String" >
			SELECT U_ID  FROM  t_user
   			WHERE  MOBILEPHONE=#{phoneNum}
   			limit  1
  </select>
  
</mapper>