<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.vanrui.app.user.dao.RoleDao">
  <resultMap id="BaseResultMap" type="com.vanrui.app.user.model.RoleEntity">
	    <id column="R_ID" jdbcType="BIGINT" property="rId" />
	    <result column="R_NAME" jdbcType="VARCHAR" property="rName" /> 
  </resultMap>
  
  <resultMap id="BaseResultMap01" type="com.vanrui.app.user.dto.AuthDto">
	    <id column="R_ID" jdbcType="BIGINT" property="rId" />
	    <result column="R_NAME" jdbcType="VARCHAR" property="rName" /> 
	    <result column="APP_SOURCE" jdbcType="VARCHAR" property="authApp" /> 
	    <result column="WEB_SOURCE" jdbcType="VARCHAR" property="authWeb" /> 
	    <result column="NUM" jdbcType="INTEGER" property="num" /> 
  </resultMap>
  
  <!-- ,CREATOR,CREATE_TIME,UPDATOR,UPDATE_TIME -->
  <sql id="Base_Column_List">
    R_ID,R_NAME
  </sql>
  
  <insert id="insert"  parameterType="com.vanrui.app.user.model.RoleEntity"  useGeneratedKeys="true" keyProperty="rId">
	    insert   into  T_ROLE(R_NAME,CREATOR,CREATE_TIME)
	    values(
	        #{rName},
	        #{creator},
	        #{createTime}
	    ) 
  </insert>
  
  <update id="update" parameterType="com.vanrui.app.user.model.RoleEntity" >
  		update   T_ROLE  SET 
	  		R_NAME = #{rName},
		    UPDATOR = #{updator},
		    UPDATE_TIME = #{updateTime}
	    where  R_ID = #{rId}
  </update>
  
  <select id="selectAllRole" resultMap="BaseResultMap">
  		select  R_ID,R_NAME
  		from   T_ROLE 
  </select>
  
  <select id="selectRoleInfoByRoleId" resultMap="BaseResultMap">
  		select  R_ID,R_NAME
  		from   T_ROLE  
  		where R_ID = #{rId}
  </select> 
  
  <delete id="deleteByRoleId"  parameterType="java.lang.Long"  >
  		delete
  		from   T_ROLE  
  		where R_ID = #{roleId}
  </delete>  
  
  <select id="selectAllAuthority"  parameterType="java.lang.Long" resultMap="BaseResultMap01">
  		SELECT  
			r.R_ID,r.R_NAME,
			(CASE WHEN app.name IS NULL THEN '-' ELSE app.name END ) APP_SOURCE,
			(CASE WHEN web.name IS NULL THEN '-' ELSE web.name END ) WEB_SOURCE,
			(CASE WHEN cou.num IS NULL THEN  0 ELSE cou.num END ) NUM
		FROM  t_role  r
		LEFT JOIN(
			SELECT  ar.R_ID,GROUP_CONCAT(am.S_NAME) NAME 
			  FROM  t_ref_appsource_role  ar LEFT JOIN  T_APP_SOURCE  am
			    ON  am.S_ID = ar.S_ID
			 WHERE  S_STATUS=1  AND  am.S_TYPE <![CDATA[ < ]]> 3 
			 GROUP  BY  ar.R_ID
		)  app ON  app.R_ID = r.R_ID
		LEFT JOIN ( 
			SELECT  wr.R_ID,GROUP_CONCAT(wm.S_NAME) NAME 
			  FROM  t_ref_websource_role wr LEFT JOIN  T_WEB_SOURCE wm
			    ON  wm.S_ID = wr.S_ID
			 WHERE  S_STATUS=1  AND  wm.S_TYPE <![CDATA[ < ]]> 3 
			 GROUP  BY  wr.R_ID
		) web  ON  web.R_ID = r.R_ID
		LEFT JOIN ( 
			SELECT  R_ID,COUNT(1) num FROM  t_ref_role_user GROUP BY r_ID
		) cou  ON  cou.R_ID = r.R_ID
  </select>
  

  <select id="isExistsForRoleName" resultType="java.lang.String" >
   		SELECT '1'  FROM   t_role  
   		WHERE   R_NAME = #{roleName} 
   		<if test="roleId != null ">
   		  AND  R_ID != #{roleId} 
   		</if>
   		limit 1 
   </select>
  
</mapper>